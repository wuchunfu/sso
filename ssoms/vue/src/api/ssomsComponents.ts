// Code generated by goctl. DO NOT EDIT.

export interface Option {
	label: string
	value: string
	extra?: string
}

export interface UserListReq {
	name?: string
	mobile?: string
	page: number
	pageSize: number
}

export interface User {
	uuid: string
	name: string
	mobile: string
	avatar: string
	gender: number
	status: number
	roles: Array<Option>
}

export interface UserListReply {
	total: number
	list: Array<User>
}

export interface AddUserReq {
	name: string
	mobile: string
	password: string
	avatar: string
	gender: number
	birth: string
	status: number
}

export interface AddUserReply {
	uuid: string
}

export interface UserDetailReq {
	uuid: string
}

export interface UserDetailReply {
	uuid: string
	name: string
	mobile: string
	avatar: string
	gender: number
	birth: string
	status: number
	password: string
}

export interface UpdateUserReq {
	uuid: string
	name: string
	mobile: string
	password?: string
	avatar: string
	gender: number
	birth: string
	status: number
}

export interface UpdateUserReply {
	success: boolean
}

export interface DeleteUserReq {
	uuid: string
}

export interface DeleteUserReply {
	success: boolean
}

export interface UserFilterOptionsReq {
	name?: string
}

export interface UserFilterOptionsReply {
	options: Array<Option>
}

export interface AssignedRolesReq {
	uuid: string
}

export interface AssignedRolesReply {
	roleUUIDArray: Array<string>
}

export interface AssignRoleReq {
	uuid: string
	roleUUIDArray: Array<string>
}

export interface AssignRoleReply {
	success: boolean
}

export interface UserPermissionsReq {
	uuid: string
	type: number // 类型: 角色
}

export interface UserPermissionsReply {
	system: Array<Option>
}

export interface RoleListReq {
	roleName?: string
	page: number
	pageSize: number
}

export interface Role {
	roleUUID: string // 角色uuid
	roleName: string // 角色名称
	summary: string // 角色概述
	inheritances: Array<Option> // 继承的角色
	usersAmount: number // 拥有的用户数量
}

export interface RoleListReply {
	total: number
	list: Array<Role>
}

export interface AddRoleReq {
	roleName: string
	summary: string
}

export interface AddRoleReply {
	roleUUID: string
}

export interface RoleDetailReq {
	roleUUID: string
}

export interface RoleDetailReply {
	roleUUID: string
	roleName: string
	summary: string
}

export interface UpdateRoleReq {
	roleUUID: string
	roleName: string
	summary: string
}

export interface UpdateRoleReply {
	success: boolean
}

export interface DeleteRoleReq {
	roleUUID: string
}

export interface DeleteRoleReply {
	success: boolean
}

export interface OptionsReply {
	options: Array<Option>
}

export interface AssignedUsersReq {
	roleUUID: string
}

export interface AssignedUsersReply {
	users: Array<Option>
}

export interface AssignUserReq {
	roleUUID: string
	userUUID: string
}

export interface AssignUserReply {
	success: boolean
}

export interface DeassignUserReq {
	roleUUID: string
	userUUID: string
}

export interface DeassignUserReply {
	success: boolean
}

export interface InheritancesReq {
	roleUUID: string
}

export interface InheritancesReply {
	roles: Array<Option>
}

export interface AddInheritanceReq {
	roleUUID: string
	extendedRoleUUIDArray: Array<string>
}

export interface AddInheritanceReply {
	success: boolean
}

export interface ObjectListReq {
	topKey?: string // 传systemCode
	objectName?: string
	key?: string
}

export interface Object {
	uuid: string
	objectName: string
	domain: string
	key: string // 操作对象的systemCode, 菜单的path, 操作的uri
	sort: number
	type: number // 类型, 1操作对象, 2模块，3菜单组，4菜单，5操作(接口)
	icon: string // 图标
	status: number
	pUUID?: string
	children?: Array<Object>
}

export interface ObjectListReply {
	list: Array<Object>
}

export interface AddObjectReq {
	objectName: string
	domain: string
	key: string // 操作对象的systemCode, 菜单的path, 操作的uri
	sort: number
	type: number // 类型, 1操作对象, 2模块，3菜单组，4菜单，5操作(接口)
	icon: string // 图标
	status: number
	pUUID?: string
	topKey: string // 传systemCode
}

export interface AddObjectReply {
	uuid: string
}

export interface ObjectDetailReq {
	uuid: string
}

export interface ObjectDetailReply {
	uuid: string
	objectName: string
	domain: string
	key: string // 操作对象的systemCode, 菜单的path, 操作的uri
	sort: number
	type: number // 类型, 1操作对象, 2模块，3菜单组，4菜单，5操作(接口)
	icon: string // 图标
	status: number
	pUUID?: string
}

export interface UpdateObjectReq {
	uuid: string
	objectName: string
	domain: string
	key: string // 操作对象的systemCode, 菜单的path, 操作的uri
	sort: number
	type: number // 类型, 1操作对象, 2模块，3菜单组，4菜单，5操作(接口)
	icon: string // 图标
	status: number
	pUUID?: string
}

export interface UpdateObjectReply {
	success: boolean
}

export interface DeleteObjectReq {
	uuid: string
}

export interface DeleteObjectReply {
	success: boolean
}

export interface RoleOperationsReq {
	topKey?: string // 传systemCode
	pUUID?: string
}

export interface RoleOperationsReply {
	list?: Array<Object>
}

export interface RolePermissionsReq {
	typeName: string // system, others
	pUUID?: string
}

export interface ObjectOption {
	label: string
	value: string
	type: number // 类型, 1操作对象, 2模块，3菜单组，4菜单，5操作(接口)
	extra: string
	children: Array<ObjectOption>
}

export interface RolePermissionsReply {
	list: Array<ObjectOption>
}

export interface GrantReq {
	typeName: string // system, others
	pUUID?: string
}

export interface GrantReply {
	uuidArray: Array<string>
}

