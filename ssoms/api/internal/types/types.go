// Code generated by goctl. DO NOT EDIT.
package types

type Option struct {
	Label string `json:"label"`
	Value string `json:"value"`
	Extra string `json:"extra,optional"`
}

type UserListReq struct {
	Name     string `json:"name,optional"`
	Mobile   string `json:"mobile,optional"`
	Page     int64  `json:"page"`
	PageSize int64  `json:"pageSize,default=20"`
}

type User struct {
	UUID   string   `json:"uuid"`
	Name   string   `json:"name"`
	Mobile string   `json:"mobile"`
	Avatar string   `json:"avatar"`
	Gender int64    `json:"gender"`
	Status int64    `json:"status"`
	Roles  []Option `json:"roles"`
}

type UserListReply struct {
	Total int64  `json:"total"`
	List  []User `json:"list"`
}

type UserForm struct {
	UUID     string `json:"uuid,optional"`
	Name     string `json:"name"`
	Mobile   string `json:"mobile"`
	Password string `json:"password,optional"`
	Avatar   string `json:"avatar"`
	Gender   int64  `json:"gender"`
	Birth    string `json:"birth"`
	Status   int64  `json:"status,default=1"`
}

type AddUserReply struct {
	UUID string `json:"uuid"`
}

type UserDetailReq struct {
	UUID string `json:"uuid"`
}

type UpdateUserReply struct {
	Success bool `json:"success"`
}

type DeleteUserReq struct {
	UUID string `json:"uuid"`
}

type DeleteUserReply struct {
	Success bool `json:"success"`
}

type UserFilterOptionsReq struct {
	Name string `json:"name,optional"`
}

type UserFilterOptionsReply struct {
	Options []Option `json:"options"`
}

type AssignedRolesReq struct {
	UUID string `json:"uuid"`
}

type AssignedRolesReply struct {
	RoleUUIDArray []string `json:"roleUUIDArray"`
}

type AssignRoleReq struct {
	UUID          string   `json:"uuid"`
	RoleUUIDArray []string `json:"roleUUIDArray"`
}

type AssignRoleReply struct {
	Success bool `json:"success"`
}

type UserPermissionsReq struct {
	UUID string `json:"uuid"`
	Typ  int64  `json:"type"` // 类型: 角色
}

type UserPermissionsReply struct {
	Systems []Option `json:"system"`
}

type RoleListReq struct {
	RoleName string `json:"roleName,optional"`
	Page     int64  `json:"page"`
	PageSize int64  `json:"pageSize,default=20"`
}

type Role struct {
	RoleUUID     string   `json:"roleUUID"`     // 角色uuid
	RoleName     string   `json:"roleName"`     // 角色名称
	Summary      string   `json:"summary"`      // 角色概述
	Inheritances []Option `json:"inheritances"` // 继承的角色
	UsersAmount  int64    `json:"usersAmount"`  // 拥有的用户数量
}

type RoleListReply struct {
	Total int64  `json:"total"`
	List  []Role `json:"list"`
}

type RoleForm struct {
	RoleUUID string `json:"roleUUID,optional"`
	RoleName string `json:"roleName"`
	Summary  string `json:"summary"`
}

type AddRoleReply struct {
	RoleUUID string `json:"roleUUID"`
}

type RoleDetailReq struct {
	RoleUUID string `json:"roleUUID"`
}

type UpdateRoleReply struct {
	Success bool `json:"success"`
}

type DeleteRoleReq struct {
	RoleUUID string `json:"roleUUID"`
}

type DeleteRoleReply struct {
	Success bool `json:"success"`
}

type OptionsReply struct {
	Options []Option `json:"options"`
}

type AssignedUsersReq struct {
	RoleUUID string `json:"roleUUID"`
}

type AssignedUsersReply struct {
	Users []Option `json:"users"`
}

type AssignUserReq struct {
	RoleUUID string `json:"roleUUID"`
	UserUUID string `json:"userUUID"`
}

type AssignUserReply struct {
	Success bool `json:"success"`
}

type DeassignUserReq struct {
	RoleUUID string `json:"roleUUID"`
	UserUUID string `json:"userUUID"`
}

type DeassignUserReply struct {
	Success bool `json:"success"`
}

type InheritancesReq struct {
	RoleUUID string `json:"roleUUID"`
}

type InheritancesReply struct {
	Roles []Option `json:"roles"`
}

type AddInheritanceReq struct {
	RoleUUID                string   `json:"roleUUID"`
	AddInheritanceUUIDArray []string `json:"extendedRoleUUIDArray"`
}

type AddInheritanceReply struct {
	Success bool `json:"success"`
}

type ObjectListReq struct {
	TopKey     string `json:"topKey,optional"` // 传systemCode
	ObjectName string `json:"objectName,optional"`
	Key        string `json:"key,optional"`
}

type Object struct {
	UUID       string   `json:"uuid"`
	ObjectName string   `json:"objectName"`
	Domain     string   `json:"domain"`
	Key        string   `json:"key"` // 操作对象的systemCode, 菜单的path, 操作的uri
	Sort       int64    `json:"sort"`
	Typ        int64    `json:"type"` // 类型, 1操作对象, 2模块，3菜单组，4菜单，5操作(接口)
	Icon       string   `json:"icon"` // 图标
	Status     int64    `json:"status"`
	PUUID      string   `json:"pUUID,optional"`
	Children   []Object `json:"children,optional"`
}

type ObjectListReply struct {
	List []Object `json:"list"`
}

type ObjectForm struct {
	UUID       string `json:"uuid,optional"`
	ObjectName string `json:"objectName"`
	Domain     string `json:"domain"`
	Key        string `json:"key"` // 操作对象的systemCode, 菜单的path, 操作的uri
	Sort       int64  `json:"sort"`
	Typ        int64  `json:"type"` // 类型, 1操作对象, 2模块，3菜单组，4菜单，5操作(接口)
	Icon       string `json:"icon"` // 图标
	Status     int64  `json:"status"`
	PUUID      string `json:"pUUID,optional"`
	TopKey     string `json:"topKey,optional"` // 传systemCode, 更新的时候不传(更新时无法修改该值)
}

type AddObjectReply struct {
	UUID string `json:"uuid"`
}

type ObjectDetailReq struct {
	UUID string `json:"uuid"`
}

type UpdateObjectReply struct {
	Success bool `json:"success"`
}

type DeleteObjectReq struct {
	UUID string `json:"uuid"`
}

type DeleteObjectReply struct {
	Success bool `json:"success"`
}

type RoleOperationsReq struct {
	TopKey string `json:"topKey,optional"` // 传systemCode
	PUUID  string `json:"pUUID,optional"`
}

type RoleOperationsReply struct {
	List []Object `json:"list,optional"`
}

type RolePermissionsReq struct {
	TypeName string `json:"typeName"` // system, others
	PUUID    string `json:"pUUID,optional"`
}

type ObjectOption struct {
	Label    string         `json:"label"`
	Value    string         `json:"value"`
	Typ      int64          `json:"type"` // 类型, 1操作对象, 2模块，3菜单组，4菜单，5操作(接口)
	Extra    string         `json:"extra"`
	Children []ObjectOption `json:"children"`
}

type RolePermissionsReply struct {
	List []ObjectOption `json:"list"`
}

type GrantReq struct {
	TypeName string `json:"typeName"` // system, others
	PUUID    string `json:"pUUID,optional"`
}

type GrantReply struct {
	UUIDArray []string `json:"uuidArray"`
}
